name: Release

on: workflow_dispatch

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
    - uses: actions/checkout@v3
      with:
        ref: main

    - name: Get next tag
      id: tag
      run: |
        echo "NEXT_VERSION=`  \
        gh release list       \
        | grep "Draft"        \
        | awk '{print $3}'    \
        `" >> $GITHUB_OUTPUT

    - name: Get versions
      id: versions
      run: |
        echo "MAJOR=`echo ${{ steps.tag.outputs.NEXT_VERSION }} | sed -r "s/v([0-9]+)\.([0-9]+)\.([0-9]+).*/\1/"`" >> $GITHUB_OUTPUT
        echo "MINOR=`echo ${{ steps.tag.outputs.NEXT_VERSION }} | sed -r "s/v([0-9]+)\.([0-9]+)\.([0-9]+).*/\2/"`" >> $GITHUB_OUTPUT
        echo "PATCH=`echo ${{ steps.tag.outputs.NEXT_VERSION }} | sed -r "s/v([0-9]+)\.([0-9]+)\.([0-9]+).*/\3/"`" >> $GITHUB_OUTPUT

    - name: Set versions
      run: |
        sed -i -zr "s/set\(VERSION_MAJOR [0-9]*\)/set(VERSION_MAJOR ${{ steps.versions.outputs.MAJOR }})/" CMakeLists.txt
        sed -i -zr "s/set\(VERSION_MINOR [0-9]*\)/set(VERSION_MINOR ${{ steps.versions.outputs.MINOR }})/" CMakeLists.txt
        sed -i -zr "s/set\(VERSION_PATCH [0-9]*\)/set(VERSION_PATCH ${{ steps.versions.outputs.PATCH }})/" CMakeLists.txt

    - name: Commit updates
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "action"
        git add .
        (git commit -m "Update Versions by Github Actions" && git push origin main) || expr 1 > /dev/null

    - name: Release from draft
      run: gh release edit ${{ steps.tag.outputs.NEXT_VERSION }} --draft=false
